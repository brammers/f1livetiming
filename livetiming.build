<?xml version="1.0"?>
<project name="LiveTiming" default="build">
	<description>Live Timing Build Files</description>
	
	<!-- Target this build at the .NET framework 3.5 -->
	<property name="nant.settings.currentframework" value="net-3.5" />
	
	<!-- Environment configuration -->	
	<property name="Build.Dir" value="bin" readonly="true" />
	<property name="Solution.Filename" value="Live Timing.sln" readonly="true" />
	<property name="Help.Filename" value="F1 Help.shfbproj" readonly="true" />
	<property name="Version.Filename" value="version.xml" readonly="true" />
	
	<!-- Delete the output from previous builds -->
	<target name="clean" description="Remove all generated files.">
		<delete failonerror="false">
			<fileset>
				<include name="${Build.Dir}\*"/>
			</fileset>
		</delete>
	</target>
	
	
	<!-- Build the release version of F1 solution -->
	<target name="buildrel" description="Build all library and executables in Release">
		<msbuild project="${Solution.Filename}">
      		<property name="Configuration" value="Release"/>
    	</msbuild>
	</target>
	
	<!-- Build the debug version of F1 solution -->
	<target name="builddeb" description="Build all library and executables in Debug">
		<msbuild project="${Solution.Filename}">
      		<property name="Configuration" value="Debug"/>
    	</msbuild>
	</target>
		
	<!-- Build both versions of F1 solution -->
	<target name="build" description="Build all library and executables." depends="builddeb,buildrel" />		
	
	<!-- Build the help files  -->
	<target name="help" description="Build the help files from XML doc" depends="buildrel">
		<msbuild project="${Help.Filename}"> 
		</msbuild>
	</target>
	
	<!-- Retrieve the current version number -->
	<target name="getver" description="Update version numbering in assembly files">
		<!-- With an XML file 
		<xmlpeek file="${Version.Filename}"
		         property="Version.Current" 
		         xpath="/LiveTiming/Version"
		         verbose="false" />
		-->
		<loadfile file="build.number" property="Version.Current" />
		<property name="Version.Current" value="${string::trim(Version.Current)}" overwrite="true" readonly="false" />
		<echo message="Retrieved version number: ${Version.Current}" />
	</target>
	
	<!-- Increment the current build number -->
	<target name="incbuildver" description="Increment version number to next value" depends="getver">
	    <version startdate="01 June 2009"/>
	    <property name="Version.Current" value="${buildnumber.version}" overwrite="true" readonly="false" />
	    <echo message="New version number: ${Version.Current}" />
	</target>
	
	<!-- Update version number in assemblys -->
	<target name="upass" description="Update the version number in all AssemblyFiles" depends="incbuildver">
		<echo message="Updating all AssemblyInfo.cs to version ${Version.Current}"/>
		<foreach item="File" property="nextFilename">
			<in>
				<items>
					<include name="**\AssemblyInfo.cs" />
				</items>
			</in>
			<do>				
				<exec program="Thirdparty\UpdateVersion.exe">
					<arg value="-p" />
					<arg value="${Version.Current}" />
					<arg value="-i" />
					<arg>
						<path>
							<pathelement path="${path::get-full-path(nextFilename)}" />
						</path>
					</arg>
					<arg value="-o" />
					<arg>
						<path>
							<pathelement path="${path::get-full-path(nextFilename)}" />
						</path>
					</arg>
				</exec>
				<exec program="Thirdparty\UpdateVersion.exe">
					<arg value="-p" />
					<arg value="${Version.Current}" />
					<arg value="-i" />
					<arg>
						<path>
							<pathelement path="${path::get-full-path(nextFilename)}" />
						</path>
					</arg>
					<arg value="-o" />
					<arg>
						<path>
							<pathelement path="${path::get-full-path(nextFilename)}" />
						</path>
					</arg>
					<arg value="-v" />
					<arg value="File" />
				</exec>
			</do>
		</foreach>
	</target>
	
	
	<!-- Multiple targets and then zips up the output to create a release -->
	<target name="deploy" description="Build and create deployment package." depends="clean,upass,build,help">
		<copy todir="${Build.Dir}" overwrite="true" file="README" />
		<copy todir="${Build.Dir}" overwrite="true" file="NOTICE" />
		<copy todir="${Build.Dir}" overwrite="true" file="Session Keys.txt" />
		<copy todir="${Build.Dir}" overwrite="true" file="COPYING" />
		<copy todir="${Build.Dir}" overwrite="true" file="COPYRIGHT" />
		<copy todir="${Build.Dir}" overwrite="true" file="Copy me to auth.config" />
		<copy todir="${Build.Dir}" overwrite="true" file="version.xml" />
		<zip zipfile="release ${Version.Current}.zip" ziplevel="9">
			<fileset basedir="${Build.Dir}" defaultexcludes="false">
				<include name="**/*"/>
			</fileset>
		</zip>
	</target>
</project>
